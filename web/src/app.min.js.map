{"version":3,"sources":["app.min.js"],"names":["angular","module","factory","$window","set","key","value","localStorage","get","setObject","JSON","stringify","getObject","parse","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","service","$http","$q","getData","data","deferred","defer","method","params","then","answer","status","resolve","error","reject","promise","constant","name","color","$scope","colorMap","visService","$interval","$filter","types","map","item","push","selectedType","viewTime","currentTime","Date","valueOf","timeRange","show","close","records","AMap","Map","mapStyle","zoom","center","setFeatures","AMapUI","load","PointSimplifier","utils","$","MyCanvasRender","pointSimplifierIns","opts","__super__","constructor","apply","this","arguments","supportCanvas","alert","inherit","Render","Canvas","extend","prototype","renderNormalPoints","activePoints","shadowPoints","call","pointStyle","getOption","getPointsGroupKey","pointStyleGroup","getPointSimplifierInstance","groups","i","len","length","point","dataIndex","idx","dataItem","getDataItemByIndex","k","styleOptions","drawPointsWithStyleOptions","getPosition","parseFloat","lng","lat","getHoverTitle","content","autoSetFitView","renderConstructor","renderOptions","width","height","fillStyle","hoverTitleStyle","position","type","g0","g1","g2","g3","g4","g5","g6","g7","g8","g9","g10","g11","g12","on","e","record","console","log","recitime","legendType","echarts","init","document","getElementById","setOption","grid","left","right","top","bottom","containLabel","xAxis","yAxis","boundaryGap","axisLabel","textStyle","d","series","barMaxWidth","itemStyle","normal","label","legendPhone","tooltip","trigger","formatter","radius","emphasis","shadowBlur","shadowOffsetX","shadowColor","areaStack","areas","axisPointer","animation","dataZoom","realtime","start","end","nameLocation","axisLine","lineStyle","axisTick","time","areaStyle","symbolSize","num","componentType","seriesType","startTime","endTime","indexOf","phone","dataType","substring","getTime","setData","maps","area","stime","etime","bars","intervalEvent","parseInt","flag","stop","cancel","months","currentMonth","data0","index","data1","data2","directive","restrict","scope","template","link","element","chart","find","style","title","text","fontSize","backgroundColor","legend","obj","onZero","splitLine","splitArea","stack","opacity","smooth","smoothMonotone","showSymbol","hoverAnimation","interval","barWidth","pieData","second","marginTop","x","selectedMode","labelLine","first"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('chinavis', ['ngAnimate', 'ui.router'])\n    .factory('localStorage', ['$window', function ($window) {\n        return {\n            // 存储单个属性\n            set: function (key, value) {\n                $window.localStorage[key] = value;\n            },\n            // 读取单个属性\n            get: function (key) {\n                return $window.localStorage[key] || '';\n            },\n            // 存储对象，以JSON格式存储\n            setObject: function (key, value) {\n                $window.localStorage[key] = JSON.stringify(value);\n            },\n            // 读取对象\n            getObject: function (key) {\n                return JSON.parse($window.localStorage[key] || '{}');\n            }\n        }\n    }])\n    .config([\"$stateProvider\", \"$urlRouterProvider\", function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('situation', {\n                url: '/',\n                templateUrl: './Situation/situation.html',\n                controller: 'situationController'\n            })\n            .state('analysis', {\n                url: '/analysis',\n                templateUrl: './Analysis/analysis.html',\n                controller: 'analysisController'\n            });\n        $urlRouterProvider.otherwise('/');\n    }]);\nangular.module('chinavis')\n    .service('visService', ['$http', '$q', function ($http, $q) {\n        return {\n            getData: function (url, data) {\n                var deferred = $q.defer();\n                var promise = $http({\n                    method: 'GET',\n                    url: url,\n                    params: data\n                });\n                promise.then(\n                    // 通讯成功的处理\n                    function (answer) {\n                        // 在这里可以对返回的数据集做一定的处理,再交由controller进行处理\n                        answer.status = true;\n                        deferred.resolve(answer.data);\n                    },\n                    // 通讯失败的处理\n                    function (error) {\n                        // 可以先对失败的数据集做处理，再交由controller进行处理\n                        error.status = false;\n                        deferred.reject(error);\n                    });\n                // 返回promise对象，交由controller继续处理成功、失败的业务回调\n                return deferred.promise;\n            }\n        }\n    }]);\nangular.module('chinavis')\n    .constant('colorMap', [\n        {\n            name: '小姐上门',\n            color: '#17becf'\n        },\n        {\n            name: '代开发票',\n            color: '#1f77b4'\n        },\n        {\n            name: '赌博麻将',\n            color: '#ff7f0e'\n        },\n        {\n            name: '办证刻章',\n            color: '#2ca02c'\n        },\n        {\n            name: '银行诈骗',\n            color: '#d62728'\n        },\n        {\n            name: '苹果诈骗',\n            color: '#9467bd'\n        },\n        {\n            name: '房地产广告',\n            color: '#8c564b'\n        },\n        {\n            name: '贷款服务',\n            color: '#e377c2'\n        },\n        {\n            name: '各类广告',\n            color: '#bcbd22'\n        },\n        {\n            name: '招聘信息',\n            color: '#17becf'\n        },\n        {\n            name: '诽谤谣言',\n            color: '#5878cf'\n        },\n        {\n            name: '中国移动',\n            color: '#74b0a1'\n        },\n        {\n            name: '收驾驶证',\n            color: '#b09355'\n        }\n    ]);\nangular.module('chinavis')\n    .controller('situationController', ['$scope', 'localStorage', 'colorMap', 'visService', '$interval', '$filter', function ($scope, localStorage, colorMap, visService, $interval, $filter) {\n        $scope.colorMap = colorMap;// 分类及对应颜色\n        $scope.types = ['所有分类'];// 所有分类\n        $scope.colorMap.map(function (item) {\n            $scope.types.push(item.name);\n        });\n        $scope.selectedType = $scope.types[0];// 当前所选分类\n\n        $scope.viewTime = '';// 回退时间\n        $scope.currentTime = '2017-02-23 00:00:00';// 当前时间\n        localStorage.set('startTime', new Date($scope.currentTime).valueOf());// 转化为时间戳存储在localStorage\n        $scope.timeRange = '';\n\n        $scope.show = false;// 是否显示短信内容\n        $scope.close = function () {\n            $scope.show = false;\n        };// 关闭短信内容\n        $scope.records = [];// 短信内容\n\n        // 创建地图\n        var map = new AMap.Map('container', {\n            mapStyle: 'amap://styles/grey',\n            zoom: 11,\n            center: [116.366576, 39.921797]\n        });\n\n        map.setFeatures(['road', 'bg']);// 多个种类要素显示\n        AMapUI.load(['ui/misc/PointSimplifier', 'lib/utils', 'lib/$'], function (PointSimplifier, utils, $) {\n            if (!PointSimplifier.supportCanvas) {\n                alert('当前环境不支持 Canvas！');\n                return;\n            }\n            function MyCanvasRender(pointSimplifierIns, opts) {\n                // 直接调用父类的构造函数\n                MyCanvasRender.__super__.constructor.apply(this, arguments);\n            }\n\n            // 继承自默认的Canvas引擎（http://webapi.amap.com/ui/1.0/ui/misc/PointSimplifier/render/canvas.js）\n            utils.inherit(MyCanvasRender, PointSimplifier.Render.Canvas);\n\n            utils.extend(MyCanvasRender.prototype, {\n                renderNormalPoints: function (zoom, activePoints, shadowPoints) {\n                    // 先按默认逻辑处理shadowPoints\n                    MyCanvasRender.__super__.renderNormalPoints.call(this, zoom, null, shadowPoints);\n\n                    var pointStyle = this.getOption('pointStyle'),\n                        getPointsGroupKey = this.getOption('getPointsGroupKey'),\n                        pointStyleGroup = this.getOption('pointStyleGroup'),\n                        pointSimplifierIns = this.getPointSimplifierInstance(),\n                        groups = {};\n\n                    // 按key分组\n                    for (var i = 0, len = activePoints.length; i < len; i++) {\n\n                        var point = activePoints[i],\n                            dataIndex = point.idx,\n                            dataItem = pointSimplifierIns.getDataItemByIndex(dataIndex);\n\n                        var key = getPointsGroupKey.call(this, dataItem, dataIndex);\n\n                        if (!groups[key]) {\n                            groups[key] = [];\n                        }\n\n                        groups[key].push(activePoints[i]);\n                    }\n\n                    // 分组绘制\n                    for (var k in groups) {\n\n                        // 继承pointStyle中的默认属性\n                        var styleOptions = utils.extend({}, pointStyle, pointStyleGroup[k]);\n\n                        // 调用父类的绘制函数\n                        this.drawPointsWithStyleOptions(groups[k], styleOptions);\n                    }\n                }\n            });\n\n            var pointSimplifierIns = new PointSimplifier({\n                map: map, // 所属的地图实例\n\n                getPosition: function (item) {\n\n                    if (!item) {\n                        return null;\n                    }\n\n                    // 返回经纬度\n                    return [parseFloat(item.lng), parseFloat(item.lat)];\n                },\n                getHoverTitle: function (dataItem) {\n                    return dataItem.content;\n                },\n                autoSetFitView: false,\n                // 赋值为 MyCanvasRender\n                renderConstructor: MyCanvasRender,\n                renderOptions: {\n                    // 点的样式\n                    pointStyle: {\n                        width: 5,\n                        height: 5,\n                        fillStyle: '#d939bd'\n                    },\n                    // 鼠标hover时的title信息\n                    hoverTitleStyle: {\n                        position: 'top'\n                    },\n                    getPointsGroupKey: function (dataItem) {\n                        // 这里直接按索引取余，仅作示意\n                        return 'g' + dataItem.type;\n                    },\n                    // 分组配置\n                    pointStyleGroup: {\n                        'g0': {\n                            fillStyle: colorMap[0].color\n                        },\n                        'g1': {\n                            fillStyle: colorMap[1].color\n                        },\n                        'g2': {\n                            fillStyle: colorMap[2].color\n                        },\n                        'g3': {\n                            fillStyle: colorMap[3].color\n                        },\n                        'g4': {\n                            fillStyle: colorMap[4].color\n                        },\n                        'g5': {\n                            fillStyle: colorMap[5].color\n                        },\n                        'g6': {\n                            fillStyle: colorMap[6].color\n                        },\n                        'g7': {\n                            fillStyle: colorMap[7].color\n                        },\n                        'g8': {\n                            fillStyle: colorMap[8].color\n                        },\n                        'g9': {\n                            fillStyle: colorMap[9].color\n                        },\n                        'g10': {\n                            fillStyle: colorMap[10].color\n                        },\n                        'g11': {\n                            fillStyle: colorMap[11].color\n                        },\n                        'g12': {\n                            fillStyle: colorMap[12].color\n                        }\n                    }\n                }\n            });\n\n            pointSimplifierIns.on('pointClick', function (e, record) {\n                console.log(e.type, record.data.recitime);\n            });\n\n            // 用echarts绘制左上legendType\n            var legendType = echarts.init(document.getElementById(\"legendType\"));\n            legendType.setOption({\n                grid: {\n                    left: 5,\n                    right: 30,\n                    top: 10,\n                    bottom: 0,\n                    containLabel: true\n                },\n                xAxis: {\n                    show: false\n                },\n                yAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    axisLabel: {\n                        textStyle: {\n                            color: function () {\n                                return (colorMap[0]).color\n                            }\n                        }\n                    },\n                    data: colorMap.map(function (d) {\n                        return d.name;\n                    })\n                },\n                series: [\n                    {\n                        type: 'bar',\n                        barMaxWidth: 20,\n                        itemStyle: {\n                            normal: {\n                                color: function (params) {\n                                    return (colorMap[params.dataIndex]).color\n                                }\n                            }\n                        },\n                        label: {\n                            normal: {\n                                show: true,\n                                position: 'right'\n                            }\n                        },\n                        data: []\n                    }\n                ]\n            });\n\n            // 用echarts绘制左上legendPhone\n            var legendPhone = echarts.init(document.getElementById(\"legendPhone\"));\n            legendPhone.setOption({\n                tooltip: {\n                    trigger: 'item',\n                    formatter: \"{c} ({d}%)\"\n                },\n                series: [\n                    {\n                        type: 'pie',\n                        radius: '55%',\n                        center: ['50%', '60%'],\n                        data: [],\n                        itemStyle: {\n                            emphasis: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        }\n                    }\n                ]\n            });\n\n            // 用echart绘制下方时间线\n            var areaStack = echarts.init(document.getElementById(\"area-stack\"));\n            $scope.areas = [];\n            areaStack.setOption({\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        animation: false\n                    }\n                },\n                grid: {// 设置图与边缘的距离\n                    left: 0,\n                    right: 35,\n                    bottom: 5,\n                    containLabel: true\n                },\n                dataZoom: [{\n                    show: false,\n                    realtime: true,\n                    start: 0,\n                    end: 100\n                }, {\n                    type: 'inside'\n                }],\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    nameLocation: 'middle',\n                    axisLine: {\n                        lineStyle: {\n                            color: '#aaaaaa'\n                        }\n                    },\n                    axisLabel: {\n                        textStyle: {\n                            color: '#aaaaaa'\n                        }\n                    },\n                    axisTick: {\n                        lineStyle: {\n                            color: '#aaaaaa'\n                        }\n                    },\n                    data: $scope.areas.map(function (item) {\n                        return item.time;\n                    })\n                },\n                yAxis: {\n                    show: false\n                },\n                series: [{\n                    name: 'num',\n                    type: 'line',\n                    lineStyle: {\n                        normal: {\n                            width: 1\n                        }\n                    },\n                    areaStyle: {\n                        normal: {\n                            color: '#aaaaaa'\n                        }\n                    },\n                    symbolSize: 3,\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'top'\n                        }\n                    },\n                    data: $scope.areas.map(function (item) {\n                        return item.num;\n                    })\n                }]\n            });\n            legendPhone.on('click', function (params) {\n                if (params.componentType === 'series') {\n                    if (params.seriesType === 'pie') {\n                        var params = {\n                            startTime: $scope.viewTime,\n                            endTime: $scope.viewTime + 1800000,\n                            type: $scope.types.indexOf($scope.selectedType) - 1,\n                            phone: params.name\n                        };\n                        visService.getData('./api/content.action', params).then(\n                            function (data) {\n                                $scope.records = data;\n                                $scope.show = true;\n                            },\n                            function (error) {\n                                $scope.error = error;\n                            });\n                    }\n                }\n            });\n            legendType.on('click', function (params) {\n                if (params.componentType === 'series') {\n                    if (params.seriesType === 'bar') {\n                        var type = -1;\n                        colorMap.map(function (d, i) {\n                            if (d.name == params.name) type = i;\n                        });\n\n                        var params = {\n                            startTime: $scope.viewTime,\n                            endTime: $scope.viewTime + 1800000,\n                            type: type\n                        };\n                        visService.getData('./api/content.action', params).then(\n                            function (data) {\n                                $scope.records = data;\n                                $scope.show = true;\n                            },\n                            function (error) {\n                                $scope.error = error;\n                            });\n                    }\n                }\n            });\n            areaStack.on('click', function (params) {\n                if (params.componentType === 'series') {\n                    if (params.seriesType === 'line') {\n                        if (params.dataType === 'edge') {\n                            // 点击到了 graph 的 edge（边）上\n                        }\n                        else {\n                            // 点击到了 graph 的 node（节点）上\n                            var time = new Date(\"2017-02-\" + params.name.substring(0, 2) + \" \" + params.name.substring(3, 8) + \":00\");\n\n                            // 重置content数据\n                            $scope.viewTime = time.getTime() - 1800000;\n                            $scope.show = false;\n                            $scope.records = [];\n\n                            var params = {\n                                startTime: time.getTime() - 1800000,\n                                endTime: time.getTime(),\n                                type: $scope.types.indexOf($scope.selectedType) - 1\n                            };\n                            visService.getData('./api/position.action', params).then(\n                                function (data) {\n                                    // 更新地图数据\n                                    pointSimplifierIns.setData(data.maps);\n\n                                    // 更新时间\n                                    $scope.timeRange = '当前时间：' + $filter('date')(data.area.stime, 'yyyy年M月d日')\n                                        + $filter('date')(data.area.stime, ' HH:mm ')\n                                        + \"至\" + $filter('date')(data.area.etime, ' HH:mm');\n\n                                    // 更新左上legendType数据\n                                    legendType.setOption({\n                                        series: [{\n                                            data: data.bars\n                                        }]\n                                    });\n                                    // 更新左上legendPhone数据\n                                    legendPhone.setOption({\n                                        series: [\n                                            {\n                                                data: data.phone\n                                            }\n                                        ]\n                                    });\n                                },\n                                function (error) {\n                                    $scope.error = error;\n                                });\n                        }\n                    }\n                }\n            });\n\n            $scope.start = function () {\n                $scope.intervalEvent = $interval(function () {\n                    // 自定义时间\n                    if (localStorage.get('startTime') != new Date($scope.currentTime).valueOf()) {\n                        localStorage.set('startTime', new Date($scope.currentTime).valueOf());\n                        // 清除下方时间线数据\n                        $scope.areas = [];\n                        areaStack.setOption({\n                            xAxis: {\n                                data: $scope.areas.map(function (item) {\n                                    return $filter('date')(item.etime, 'd日HH:mm');\n                                })\n                            },\n                            series: [{\n                                data: $scope.areas.map(function (item) {\n                                    return item.num;\n                                })\n                            }]\n                        });\n                    }\n\n                    var params = {\n                        startTime: localStorage.get('startTime'),\n                        endTime: parseInt(localStorage.get('startTime')) + 1800000,\n                        type: $scope.types.indexOf($scope.selectedType) - 1\n                    };\n                    visService.getData('./api/position.action', params).then(\n                        function (data) {\n                            // 更新地图数据\n                            pointSimplifierIns.setData(data.maps);\n\n                            // 更新时间\n                            $scope.timeRange = '当前时间：' + $filter('date')(data.area.stime, 'yyyy年M月d日')\n                                + $filter('date')(data.area.stime, 'HH:mm')\n                                + \"至\" + $filter('date')(data.area.etime, 'HH:mm');\n\n                            // 更新左上legendType数据\n                            legendType.setOption({\n                                series: [{\n                                    data: data.bars\n                                }]\n                            });\n                            // 更新左上legendPhone数据\n                            legendPhone.setOption({\n                                series: [\n                                    {\n                                        data: data.phone\n                                    }\n                                ]\n                            });\n\n                            // 更新下方时间线数据\n                            $scope.areas.push(data.area);\n                            // if ($scope.areas.length > 24) $scope.areas.shift();\n                            areaStack.setOption({\n                                xAxis: {\n                                    data: $scope.areas.map(function (item) {\n                                        return $filter('date')(item.etime, 'd日HH:mm');\n                                    })\n                                },\n                                series: [{\n                                    data: $scope.areas.map(function (item) {\n                                        return item.num;\n                                    })\n                                }]\n                            });\n                        },\n                        function (error) {\n                            $scope.error = error;\n                        });\n\n                    // 重置content数据\n                    $scope.viewTime = parseInt(localStorage.get('startTime'));\n                    $scope.show = false;\n                    $scope.records = [];\n\n                    localStorage.set('startTime', parseInt(localStorage.get('startTime')) + 1800000);\n                    $scope.currentTime = $filter('date')(localStorage.get('startTime'), 'yyyy-MM-dd HH:mm:ss');\n\n                }, 10000);\n            };\n\n            $scope.flag = '';\n            $scope.stop = function (flag) {\n                if (flag == 'Pause') {\n                    $interval.cancel($scope.intervalEvent);\n                    $scope.flag = 'Start';\n                } else {\n                    $scope.start(localStorage.get('startTime'));\n                    $scope.flag = 'Pause';\n\n                    // 重置content数据\n                    $scope.show = false;\n                    $scope.records = [];\n                }\n            };\n        });\n    }]);\nangular.module('chinavis')\n    .controller('analysisController', ['$scope', 'colorMap', 'visService', '$interval', '$filter', function ($scope, colorMap, visService, $interval, $filter) {\n        $scope.months = [\n            {\n                \"name\": \"二月\",\n                \"url\": \"data/M2-30min.json\"\n            },\n            {\n                \"name\": \"三月\",\n                \"url\": \"data/M3-30min.json\"\n            },\n            {\n                \"name\": \"四月\",\n                \"url\": \"data/M4-30min.json\"\n            }\n        ];\n        $scope.currentMonth = \"二月\";\n\n        // 初始展示二月份数据\n        visService.getData($scope.months[0].url, {}).then(\n            function (data) {\n                $scope.data0 = data;\n            },\n            function (error) {\n                $scope.error = error;\n            });\n\n        $scope.show = function (index) {\n            visService.getData($scope.months[index].url, {}).then(\n                function (data) {\n                    $scope.currentMonth = data.name;\n                    if (index === 0) {\n                        $scope.data0 = data;\n                        $scope.data1 = null;\n                        $scope.data2 = null;\n                    } else if (index === 1) {\n                        $scope.data0 = null;\n                        $scope.data1 = data;\n                        $scope.data2 = null;\n                    } else if (index === 2) {\n                        $scope.data0 = null;\n                        $scope.data1 = null;\n                        $scope.data2 = data;\n                    }\n                },\n                function (error) {\n                    $scope.error = error;\n                });\n        }\n    }]);\nangular.module('chinavis')\n    .directive('areaChart', ['$filter', 'colorMap', function ($filter, colorMap) {\n        return {\n            restrict: 'AE',\n            scope: {\n                data: '='\n            },\n            template: '<div></div>',\n            link: function (scope, element) {\n                var chart = element.find('div')[0];\n                chart.style.height = '249px';\n                chart.style.width = '100%';\n\n                var Chart = echarts.init(chart);\n                Chart.setOption({\n                    title: {\n                        text: scope.data.name,\n                        textStyle: {\n                            color: '#aaaaaa',\n                            fontSize: 15\n                        },\n                        top: 15,\n                        left: 40\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: {\n                            type: 'cross',\n                            lineStyle: {\n                                type: 'dashed',\n                                width: 1\n                            },\n                            label: {\n                                backgroundColor: '#6a7985'\n                            }\n                        },\n                        position: {\n                            right: 10,\n                            top: 10\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '2%',\n                        bottom: '1%',\n                        containLabel: true\n                    },// 设置图与边缘的距离\n                    dataZoom: [{\n                        show: false,\n                        realtime: true,\n                        start: 0,\n                        end: 50\n                    }, {\n                        type: 'inside'\n                    }],\n                    color: colorMap.map(function (item) {\n                        return item.color\n                    }),// 改变legend的颜色\n                    legend: {\n                        top: 15,\n                        data: colorMap.map(function (item) {\n                            var obj = {};\n                            obj.name = item.name;\n                            obj.textStyle = {color: item.color};\n                            return obj;\n                        })\n                    },\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        axisLine: {\n                            onZero: true,\n                            lineStyle: {\n                                color: '#aaaaaa'\n                            }\n                        },\n                        axisLabel: {\n                            textStyle: {\n                                color: '#aaaaaa'\n                            }\n                        },\n                        axisTick: {\n                            lineStyle: {\n                                color: '#aaaaaa'\n                            }\n                        },\n                        data: scope.data.value.map(function (item) {\n                            return $filter('date')(item.time, 'M月d日H时mm分');\n                        })\n                    },\n                    yAxis: {\n                        type: 'value',\n                        splitLine: {\n                            show: false\n                        },// 去除网格线\n                        splitArea: {\n                            show: false\n                        },// 保留网格区域\n                        axisLine: {\n                            lineStyle: {\n                                color: '#aaaaaa'\n                            }\n                        },\n                        axisLabel: {\n                            textStyle: {\n                                color: '#aaaaaa'\n                            }\n                        },\n                        axisTick: {\n                            lineStyle: {\n                                color: '#aaaaaa'\n                            }\n                        }\n                    },\n                    series: [\n                        {\n                            name: colorMap[0].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[0].color\n                                }\n                            },\n                            smooth: true,\n                            smoothMonotone: 'x',\n                            symbolSize: 0,\n                            showSymbol: false,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g0 || 0;\n                            })\n                        }, {\n                            name: colorMap[1].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[1].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g1 || 0;\n                            })\n                        }, {\n                            name: colorMap[2].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[2].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g1 || 0;\n                            })\n                        }, {\n                            name: colorMap[3].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[3].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g3 || 0;\n                            })\n                        }, {\n                            name: colorMap[4].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[4].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g4 || 0;\n                            })\n                        }, {\n                            name: colorMap[5].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[5].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g5 || 0;\n                            })\n                        }, {\n                            name: colorMap[6].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[6].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g6 || 0;\n                            })\n                        }, {\n                            name: colorMap[7].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[7].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g7 || 0;\n                            })\n                        }, {\n                            name: colorMap[8].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[8].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g8 || 0;\n                            })\n                        }, {\n                            name: colorMap[9].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[9].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g9 || 0;\n                            })\n                        }, {\n                            name: colorMap[10].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[10].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g10 || 0;\n                            })\n                        }, {\n                            name: colorMap[11].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[11].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g11 || 0;\n                            })\n                        }, {\n                            name: colorMap[12].name,\n                            type: 'line',\n                            stack: '总量',\n                            lineStyle: {\n                                normal: {\n                                    opacity: 0\n                                }\n                            },\n                            areaStyle: {\n                                normal: {\n                                    color: colorMap[12].color\n                                }\n                            },\n                            symbolSize: 3,\n                            hoverAnimation: false,\n                            data: scope.data.value.map(function (item) {\n                                return item.g12 || 0;\n                            })\n                        }]\n                });\n            }\n        }\n    }]);\nangular.module('chinavis')\n    .directive('barChart', ['$filter', 'colorMap', function ($filter, colorMap) {\n        return {\n            restrict: 'AE',\n            scope: {\n                data: '=',\n                type: '='\n            },\n            template: '<div></div>',\n            link: function (scope, element) {\n                var title = ['各时间段伪基站活跃情况', '各类短信数量对比'];\n\n                var chart = element.find('div')[0];\n                chart.style.height = '249px';\n                chart.style.width = '100%';\n\n                var Chart = echarts.init(chart);\n                Chart.setOption({\n                    title: {\n                        text: title[scope.type],\n                        textStyle: {\n                            color: '#aaaaaa',\n                            fontSize: 15\n                        },\n                        top: 15,\n                        left: 40\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: {// 坐标轴指示器，坐标轴触发有效\n                            type: 'shadow'// 默认为直线，可选为：'line' | 'shadow'\n                        }\n                    },\n                    grid: {\n                        left: '1%',\n                        right: '2%',\n                        bottom: '1%',\n                        containLabel: true\n                    },// 设置图与边缘的距离\n                    xAxis: [\n                        {\n                            type: 'category',\n                            axisLine: {\n                                onZero: true,\n                                lineStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            },\n                            axisLabel: {\n                                show: true,\n                                interval: 0,\n                                textStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            },\n                            axisTick: {\n                                lineStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            },\n                            data: scope.data.map(function (item) {\n                                if (scope.type === 0) return $filter('date')(item.time, 'HH:mm');\n                                else if (scope.type === 1) return colorMap[item.type].name;\n                            })\n                        }\n                    ],\n                    yAxis: [\n                        {\n                            type: 'value',\n                            splitLine: {\n                                show: false\n                            },// 去除网格线\n                            splitArea: {\n                                show: false\n                            },// 保留网格区域\n                            axisLine: {\n                                lineStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            },\n                            axisLabel: {\n                                textStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            },\n                            axisTick: {\n                                lineStyle: {\n                                    color: '#aaaaaa'\n                                }\n                            }\n                        }\n                    ],\n                    series: [\n                        {\n                            name: '总量',\n                            type: 'bar',\n                            barWidth: '60%',\n                            itemStyle: {\n                                normal: {\n                                    color: function (params) {\n                                        if (scope.type === 0) return '#3398DB';\n                                        else if (scope.type === 1) return (colorMap[params.dataIndex]).color\n                                    }\n                                }\n                            },\n                            data: scope.data.map(function (item) {\n                                return item.num\n                            })\n                        }\n                    ]\n                });\n\n            }\n        }\n    }]);\nangular.module('chinavis')\n    .directive('pieChart', ['$filter', 'colorMap', function ($filter, colorMap) {\n        return {\n            restrict: 'AE',\n            scope: {\n                data: '='\n            },\n            template: '<div></div>',\n            link: function (scope, element) {\n                var pieData = [];\n                // 修改key并添加颜色信息\n                scope.data.second.map(function (item) {\n                    var obj = {};\n                    obj.name = colorMap[item.type].name;\n                    obj.value = item.num;\n                    obj.itemStyle = {\"normal\": {\"color\": colorMap[item.type].color}};\n                    pieData.push(obj);\n                });\n\n                var chart = element.find('div')[0];\n                chart.style.marginTop = '20px';\n                chart.style.height = '500px';\n                chart.style.width = '100%';\n\n                var Chart = echarts.init(chart);\n                Chart.setOption({\n                    title: {\n                        text: '各类短信所占比例',\n                        x: 'center',\n                        bottom: 30,\n                        textStyle: {\n                            color: '#aaaaaa',\n                            fontSize: 15\n                        }\n                    },\n                    grid: {\n                        left: '2%',\n                        right: '2%',\n                        top: '2%',\n                        containLabel: true\n                    },// 设置图与边缘的距离\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: \"{b}: {c} ({d}%)\"\n                    },\n                    series: [\n                        {\n                            type: 'pie',\n                            selectedMode: 'single',\n                            radius: [0, '30%'],\n\n                            label: {\n                                normal: {\n                                    position: 'inner'\n                                }\n                            },\n                            labelLine: {\n                                normal: {\n                                    show: false\n                                }\n                            },\n                            data: scope.data.first\n                        },\n                        {\n                            name: '访问来源',\n                            type: 'pie',\n                            radius: ['40%', '55%'],\n\n                            data: pieData\n                        }\n                    ]\n                });\n\n            }\n        }\n    }]);"]}